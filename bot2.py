import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import sqlite3
from utils import fetch_all_data

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(name)

# –ö–æ–º–∞–Ω–¥—ã
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    conn = sqlite3.connect("users.db")
    cur = conn.cursor()
    cur.execute("CREATE TABLE IF NOT EXISTS users (user_id INTEGER PRIMARY KEY)")
    cur.execute("INSERT OR IGNORE INTO users (user_id) VALUES (?)", (user_id,))
    conn.commit()
    conn.close()
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ /latest, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.")

async def latest(update: Update, context: ContextTypes.DEFAULT_TYPE):
    data = fetch_all_data()
    msg = "üìä *–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:*\n\n"
    for block in data:
        msg += f"*{block['title']}*\n"
        for item in block['items']:
            msg += f"‚Äì {item['name']} ({item['rate']}) [–ü–æ–¥—Ä–æ–±–Ω–µ–µ]({item['url']})\n"
        msg += "\n"
    await update.message.reply_text(msg, parse_mode="Markdown", disable_web_page_preview=True)

def main():
    app = ApplicationBuilder().token("PASTE_YOUR_BOT_TOKEN_HERE").build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("latest", latest))
    app.run_polling()

if name == "main":
    main()